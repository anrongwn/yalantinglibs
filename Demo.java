// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo.proto

public final class Demo {
  private Demo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MyTestFixed64OrBuilder extends
      // @@protoc_insertion_point(interface_extends:MyTestFixed64)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>fixed64 a = 1;</code>
     * @return The a.
     */
    long getA();

    /**
     * <code>repeated fixed64 b = 2;</code>
     * @return A list containing the b.
     */
    java.util.List<java.lang.Long> getBList();
    /**
     * <code>repeated fixed64 b = 2;</code>
     * @return The count of b.
     */
    int getBCount();
    /**
     * <code>repeated fixed64 b = 2;</code>
     * @param index The index of the element to return.
     * @return The b at the given index.
     */
    long getB(int index);
  }
  /**
   * Protobuf type {@code MyTestFixed64}
   */
  public static final class MyTestFixed64 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MyTestFixed64)
      MyTestFixed64OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MyTestFixed64.newBuilder() to construct.
    private MyTestFixed64(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MyTestFixed64() {
      b_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MyTestFixed64();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Demo.internal_static_MyTestFixed64_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Demo.internal_static_MyTestFixed64_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Demo.MyTestFixed64.class, Demo.MyTestFixed64.Builder.class);
    }

    public static final int A_FIELD_NUMBER = 1;
    private long a_;
    /**
     * <code>fixed64 a = 1;</code>
     * @return The a.
     */
    @java.lang.Override
    public long getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.LongList b_;
    /**
     * <code>repeated fixed64 b = 2;</code>
     * @return A list containing the b.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getBList() {
      return b_;
    }
    /**
     * <code>repeated fixed64 b = 2;</code>
     * @return The count of b.
     */
    public int getBCount() {
      return b_.size();
    }
    /**
     * <code>repeated fixed64 b = 2;</code>
     * @param index The index of the element to return.
     * @return The b at the given index.
     */
    public long getB(int index) {
      return b_.getLong(index);
    }
    private int bMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (a_ != 0L) {
        output.writeFixed64(1, a_);
      }
      if (getBList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(bMemoizedSerializedSize);
      }
      for (int i = 0; i < b_.size(); i++) {
        output.writeFixed64NoTag(b_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (a_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, a_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getBList().size();
        size += dataSize;
        if (!getBList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        bMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Demo.MyTestFixed64)) {
        return super.equals(obj);
      }
      Demo.MyTestFixed64 other = (Demo.MyTestFixed64) obj;

      if (getA()
          != other.getA()) return false;
      if (!getBList()
          .equals(other.getBList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + A_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getA());
      if (getBCount() > 0) {
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + getBList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Demo.MyTestFixed64 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Demo.MyTestFixed64 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Demo.MyTestFixed64 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Demo.MyTestFixed64 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Demo.MyTestFixed64 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Demo.MyTestFixed64 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Demo.MyTestFixed64 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Demo.MyTestFixed64 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Demo.MyTestFixed64 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Demo.MyTestFixed64 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Demo.MyTestFixed64 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Demo.MyTestFixed64 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Demo.MyTestFixed64 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MyTestFixed64}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MyTestFixed64)
        Demo.MyTestFixed64OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Demo.internal_static_MyTestFixed64_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Demo.internal_static_MyTestFixed64_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Demo.MyTestFixed64.class, Demo.MyTestFixed64.Builder.class);
      }

      // Construct using Demo.MyTestFixed64.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        a_ = 0L;

        b_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Demo.internal_static_MyTestFixed64_descriptor;
      }

      @java.lang.Override
      public Demo.MyTestFixed64 getDefaultInstanceForType() {
        return Demo.MyTestFixed64.getDefaultInstance();
      }

      @java.lang.Override
      public Demo.MyTestFixed64 build() {
        Demo.MyTestFixed64 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Demo.MyTestFixed64 buildPartial() {
        Demo.MyTestFixed64 result = new Demo.MyTestFixed64(this);
        int from_bitField0_ = bitField0_;
        result.a_ = a_;
        if (((bitField0_ & 0x00000001) != 0)) {
          b_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.b_ = b_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Demo.MyTestFixed64) {
          return mergeFrom((Demo.MyTestFixed64)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Demo.MyTestFixed64 other) {
        if (other == Demo.MyTestFixed64.getDefaultInstance()) return this;
        if (other.getA() != 0L) {
          setA(other.getA());
        }
        if (!other.b_.isEmpty()) {
          if (b_.isEmpty()) {
            b_ = other.b_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBIsMutable();
            b_.addAll(other.b_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                a_ = input.readFixed64();

                break;
              } // case 9
              case 17: {
                long v = input.readFixed64();
                ensureBIsMutable();
                b_.addLong(v);
                break;
              } // case 17
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureBIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  b_.addLong(input.readFixed64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long a_ ;
      /**
       * <code>fixed64 a = 1;</code>
       * @return The a.
       */
      @java.lang.Override
      public long getA() {
        return a_;
      }
      /**
       * <code>fixed64 a = 1;</code>
       * @param value The a to set.
       * @return This builder for chaining.
       */
      public Builder setA(long value) {
        
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 a = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearA() {
        
        a_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList b_ = emptyLongList();
      private void ensureBIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          b_ = mutableCopy(b_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @return A list containing the b.
       */
      public java.util.List<java.lang.Long>
          getBList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(b_) : b_;
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @return The count of b.
       */
      public int getBCount() {
        return b_.size();
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @param index The index of the element to return.
       * @return The b at the given index.
       */
      public long getB(int index) {
        return b_.getLong(index);
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @param index The index to set the value at.
       * @param value The b to set.
       * @return This builder for chaining.
       */
      public Builder setB(
          int index, long value) {
        ensureBIsMutable();
        b_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @param value The b to add.
       * @return This builder for chaining.
       */
      public Builder addB(long value) {
        ensureBIsMutable();
        b_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @param values The b to add.
       * @return This builder for chaining.
       */
      public Builder addAllB(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureBIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, b_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 b = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearB() {
        b_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MyTestFixed64)
    }

    // @@protoc_insertion_point(class_scope:MyTestFixed64)
    private static final Demo.MyTestFixed64 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Demo.MyTestFixed64();
    }

    public static Demo.MyTestFixed64 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MyTestFixed64>
        PARSER = new com.google.protobuf.AbstractParser<MyTestFixed64>() {
      @java.lang.Override
      public MyTestFixed64 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MyTestFixed64> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MyTestFixed64> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Demo.MyTestFixed64 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MyTestFixed64_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MyTestFixed64_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ndemo.proto\"%\n\rMyTestFixed64\022\t\n\001a\030\001 \001(\006" +
      "\022\t\n\001b\030\002 \003(\006b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_MyTestFixed64_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MyTestFixed64_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MyTestFixed64_descriptor,
        new java.lang.String[] { "A", "B", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
